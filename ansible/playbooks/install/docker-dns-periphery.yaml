---
- name: Post-provisioning setup for VM
  hosts: docker-install-dns
  become: true

  tasks:
    - name: Ensure system packages are up to date
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install prerequisites for Docker repository
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present

    - name: Create Docker keyring directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker's official GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        chmod a+r /etc/apt/keyrings/docker.asc
      args:
        creates: /etc/apt/keyrings/docker.asc

    - name: Add Docker repository
      shell: |
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
        tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Ensure DNSStubListener is set to no
      lineinfile:
        path: /etc/systemd/resolved.conf
        regexp: '^#?DNSStubListener='
        line: 'DNSStubListener=no'
        backup: yes
      notify: Restart systemd-resolved

    - name: Ensure /etc/resolv.conf points to /run/systemd/resolve/resolv.conf
      file:
        path: /etc/resolv.conf
        state: link
        src: /run/systemd/resolve/resolv.conf
        force: true

    - name: Set interface facts with hardcoded /24 prefix
      ansible.builtin.set_fact:
        interface: "{{ ansible_default_ipv4.interface }}"
        ip_address: "{{ ansible_default_ipv4.address }}"
        prefix: 24
        gateway: "{{ ansible_default_ipv4.gateway }}"

    - name: Write netplan config with current IP and static DNS (no template)
      copy:
        dest: /etc/netplan/99-custom.yaml
        owner: root
        group: root
        mode: '0644'
        content: |
          network:
            version: 2
            ethernets:
              {{ interface }}:
                addresses:
                  - {{ ip_address }}/{{ prefix }}
                gateway4: {{ gateway }}
                nameservers:
                  addresses: [127.0.0.1]
      notify: Apply netplan

    - name: Allow mgrsys to run sudo without password
      copy:
        dest: /etc/sudoers.d/mgrsys
        content: "mgrsys ALL=(ALL) NOPASSWD:ALL"
        mode: 0440

    - name: Disable SSH password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'
      notify: Restart SSH

    - name: Add mgrsys to Docker group
      user:
        name: mgrsys
        groups: docker
        append: yes

    - name: Set timezone to Europe/Berlin
      community.general.timezone:
        name: Europe/Berlin

  handlers:
    - name: Restart SSH
      service:
        name: ssh
        state: restarted

    - name: Restart systemd-resolved
      systemd:
        name: systemd-resolved
        state: restarted
        enabled: true

    - name: Apply netplan
      command: netplan apply
