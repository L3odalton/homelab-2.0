x-lockdown: &lockdown
  # prevents write access to the image itself
  read_only: true
  # prevents any process within the container to gain more privileges
  security_opt:
    - "no-new-privileges=true"

services:
  prowlarr:
    image: "11notes/prowlarr:2.0.5-unraid"
    <<: *lockdown
    environment:
      TZ: "Europe/Berlin"
    volumes:
      - "prowlarr.etc:/prowlarr/etc"
    tmpfs:
      # required for read-only image
      - "/tmp:uid=99,gid=100"
    ports:
      - "9696:9696/tcp"
    networks:
      proxy:
    restart: "unless-stopped"
    labels:
      # Traefik
      - "traefik.enable=true"
      - "kop.bind.ip=srv-unraid.local.darksaber.fyi"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=6060"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.darksaber.fyi`)"
      - "traefik.http.routers.prowlarr.entrypoints=https"
      - "traefik.http.routers.prowlarr.tls=true"
      - "traefik.docker.network=proxy"

  sonarr:
    image: "11notes/sonarr:4.0.15-unraid"
    <<: *lockdown
    environment:
      TZ: "Europe/Berlin"
    volumes:
      - "sonarr.etc:/sonarr/etc"
      - "/mnt/user/data:/data"
    tmpfs:
      # required for read-only image
      - "/tmp:uid=99,gid=100"
    ports:
      - "8989:8989/tcp"
    networks:
      proxy:
    restart: "unless-stopped"
    labels:
      # Traefik
      - "traefik.enable=true"
      - "kop.bind.ip=srv-unraid.local.darksaber.fyi"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.darksaber.fyi`)"
      - "traefik.http.routers.sonarr.entrypoints=https"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.docker.network=proxy"

  radarr:
    image: "11notes/radarr:5.27.5-unraid"
    <<: *lockdown
    environment:
      TZ: "Europe/Berlin"
    volumes:
      - "radarr.etc:/radarr/etc"
      - "/mnt/User/data:/data"
    tmpfs:
      # required for read-only image
      - "/tmp:uid=99,gid=100"
    ports:
      - "7877:7878/tcp"
    networks:
      frontend:
    restart: "unless-stopped"
    labels:
      # Traefik
      - "traefik.enable=true"
      - "kop.bind.ip=srv-unraid.local.darksaber.fyi"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.rule=Host(`radarr.darksaber.fyi`)"
      - "traefik.http.routers.radarr.entrypoints=https"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.docker.network=proxy"

volumes:
  prowlarr.etc:
  sonarr.etc:
  radarr.etc:

networks:
  proxy:
    external: true