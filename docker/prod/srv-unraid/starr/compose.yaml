x-lockdown: &lockdown
  # prevents write access to the image itself
  read_only: true
  # prevents any process within the container to gain more privileges
  security_opt:
    - "no-new-privileges=true"

services:
  prowlarr:
    image: "11notes/prowlarr:2.0.5-unraid"
    <<: *lockdown
    environment:
      TZ: "Europe/Berlin"
    volumes:
      - "prowlarr.etc:/prowlarr/etc"
    tmpfs:
      # required for read-only image
      - "/tmp:uid=99,gid=100"
    ports:
      - "9696:9696/tcp"
    networks:
      proxy:
    restart: "unless-stopped"
    labels:
      # Traefik
      - "traefik.enable=true"
      - "kop.bind.ip=srv-unraid.local.darksaber.fyi"
      - "traefik.docker.network=proxy"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      # Web Service
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.darksaber.fyi`)"
      - "traefik.http.routers.prowlarr.entrypoints=https"
      - "traefik.http.routers.prowlarr.tls=true"
      - "traefik.http.routers.prowlarr.middlewares=default-acl@docker,pocket-id@docker"

  sonarr:
    image: "11notes/sonarr:4.0.15-unraid"
    <<: *lockdown
    environment:
      TZ: "Europe/Berlin"
    volumes:
      - "sonarr.etc:/sonarr/etc"
      - "/mnt/user/data:/data"
    tmpfs:
      # required for read-only image
      - "/tmp:uid=99,gid=100"
    ports:
      - "8989:8989/tcp"
    networks:
      proxy:
    restart: "unless-stopped"
    labels:
      # Traefik
      - "traefik.enable=true"
      - "kop.bind.ip=srv-unraid.local.darksaber.fyi"
      - "traefik.docker.network=proxy"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      # Web Service
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.darksaber.fyi`)"
      - "traefik.http.routers.sonarr.entrypoints=https"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.middlewares=default-acl@docker,pocket-id@docker"

  radarr:
    image: "11notes/radarr:5.28.0-unraid"
    <<: *lockdown
    environment:
      TZ: "Europe/Berlin"
    volumes:
      - "radarr.etc:/radarr/etc"
      - "/mnt/user/data:/data"
    tmpfs:
      # required for read-only image
      - "/tmp:uid=99,gid=100"
    ports:
      - "7878:7878/tcp"
    networks:
      proxy:
    restart: "unless-stopped"
    labels:
      # Traefik
      - "traefik.enable=true"
      - "kop.bind.ip=srv-unraid.local.darksaber.fyi"
      - "traefik.docker.network=proxy"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      # Web Service
      - "traefik.http.routers.radarr.rule=Host(`radarr.darksaber.fyi`)"
      - "traefik.http.routers.radarr.entrypoints=https"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.middlewares=default-acl@docker,pocket-id@docker"

  umlautadaptarr:
    image: pcjones/umlautadaptarr:latest
    container_name: umlautadaptarr
    environment:
      - TZ=Europe/Berlin
      - SONARR__ENABLED=true
      - SONARR__HOST=${SONARR_HOST}
      - SONARR__APIKEY=${SONARR_APIKEY}
    networks:
      - proxy
    restart: unless-stopped

  huntarr:
    image: huntarr/huntarr:8.2.10
    container_name: huntarr
    environment:
      - TZ=Europe/Berlin
    networks:
      - proxy
    ports:
      - 9705:9705
    volumes:
      - huntarr.config:/config
    labels:
      # Traefik
      - "traefik.enable=true"
      - "kop.bind.ip=srv-unraid.local.darksaber.fyi"
      - "traefik.http.services.huntarr.loadbalancer.server.port=9705"
      - "traefik.http.routers.huntarr.rule=Host(`huntarr.darksaber.fyi`)"
      - "traefik.http.routers.huntarr.entrypoints=https"
      - "traefik.http.routers.huntarr.tls=true"
      - "traefik.http.routers.huntarr.middlewares=default-acl@docker,pocket-id@docker"
      - "traefik.docker.network=proxy"
    restart: unless-stopped

  notifiarr:
    image: golift/notifiarr:0.9.0
    container_name: notifiarr
    hostname: notifiarr
    environment:
      - DN_API_KEY=${NOTIFIARR_API_KEY}
      - DN_UI_PASSWORD=${DN_UI_PASSWORD}
    volumes:
      - notifiarr.config:/config
      - /etc/machine-id:/etc/machine-id
    networks:
      - proxy
    ports:
      - 5454:5454
    labels:
      # Traefik
      - "traefik.enable=true"
      - "kop.bind.ip=srv-unraid.local.darksaber.fyi"
      - "traefik.http.services.notifiarr.loadbalancer.server.port=5454"
      - "traefik.http.routers.notifiarr.rule=Host(`notifiarr.darksaber.fyi`)"
      - "traefik.http.routers.notifiarr.entrypoints=https"
      - "traefik.http.routers.notifiarr.tls=true"
      - "traefik.http.routers.notifiarr.middlewares=default-acl@docker,pocket-id@docker"
      - "traefik.docker.network=proxy"
    restart: unless-stopped

  maintainerr:
    image: ghcr.io/jorenn92/maintainerr:2.19
    user: 99:100
    volumes:
      - maintainerr.data:/opt/data
    environment:
      - TZ=Europe/Berlin
    ports:
      - 6246:6246
    labels:
      # Traefik
      - "traefik.enable=true"
      - "kop.bind.ip=srv-unraid.local.darksaber.fyi"
      - "traefik.http.services.maintainerr.loadbalancer.server.port=6246"
      - "traefik.http.routers.maintainerr.rule=Host(`maintainerr.darksaber.fyi`)"
      - "traefik.http.routers.maintainerr.entrypoints=https"
      - "traefik.http.routers.maintainerr.tls=true"
      - "traefik.http.routers.maintainerr.middlewares=default-acl@docker,pocket-id@docker"
      - "traefik.docker.network=proxy"
    restart: unless-stopped

volumes:
  prowlarr.etc:
  sonarr.etc:
  radarr.etc:
  huntarr.config:
  notifiarr.config:
  maintainerr.data:

networks:
  proxy:
    external: true
